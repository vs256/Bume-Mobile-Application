{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vidas\\\\Documents\\\\Git Projects\\\\Bume-Mobile-Application\\\\Bume-mobile-application\\\\navigation\\\\index.tsx\";\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport HomeScreen from \"../screens/HomeScreen\";\nimport DetailsScreen from \"../screens/DetailsScreen\";\nimport ProfileScreen from \"../screens/ProfileScreen\";\nimport LinkingConfiguration from \"./LinkingConfiguration\";\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport Icon from \"@expo/vector-icons/Ionicons\";\nexport default function Navigation(_ref) {\n  var colorScheme = _ref.colorScheme;\n  return React.createElement(NavigationContainer, {\n    linking: LinkingConfiguration,\n    theme: colorScheme === 'dark' ? DarkTheme : DefaultTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, React.createElement(RootNavigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }));\n}\nvar HomeStack = createStackNavigator();\nvar DetailsStack = createStackNavigator();\nvar ProfileStack = createStackNavigator();\nvar Drawer = createDrawerNavigator();\n\nfunction HomeStackScreen(_ref2) {\n  var _this = this;\n\n  var navigation = _ref2.navigation;\n  return React.createElement(HomeStack.Navigator, {\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: '#009387'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, React.createElement(HomeStack.Screen, {\n    name: \"Root\",\n    component: HomeScreen,\n    options: {\n      title: 'Overview',\n      headerLeft: function headerLeft() {\n        return React.createElement(Icon.Button, {\n          name: \"ios-menu\",\n          size: 25,\n          backgroundColor: \"#009387\",\n          onPress: function onPress() {\n            navigation.openDrawer();\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction ProfileStackScreen(_ref3) {\n  var _this2 = this;\n\n  var navigation = _ref3.navigation;\n  return React.createElement(ProfileStack.Navigator, {\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: '#009387'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, React.createElement(ProfileStack.Screen, {\n    name: \"NotFound\",\n    component: ProfileScreen,\n    options: {\n      title: 'Profile',\n      headerLeft: function headerLeft() {\n        return React.createElement(Icon.Button, {\n          name: \"ios-menu\",\n          size: 25,\n          backgroundColor: \"#009387\",\n          onPress: function onPress() {\n            navigation.openDrawer();\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 11\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction DetailsStackScreen(_ref4) {\n  var _this3 = this;\n\n  var navigation = _ref4.navigation;\n  return React.createElement(DetailsStack.Navigator, {\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: '#009387'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, React.createElement(DetailsStack.Screen, {\n    name: \"Root\",\n    component: DetailsScreen,\n    options: {\n      title: 'Details',\n      headerLeft: function headerLeft() {\n        return React.createElement(Icon.Button, {\n          name: \"ios-menu\",\n          size: 25,\n          backgroundColor: \"#009387\",\n          onPress: function onPress() {\n            navigation.openDrawer();\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 11\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction RootNavigator() {\n  return React.createElement(Drawer.Navigator, {\n    initialRouteName: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, React.createElement(Drawer.Screen, {\n    name: \"Home\",\n    component: HomeStackScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Details\",\n    component: DetailsStackScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Profile\",\n    component: ProfileStackScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/vidas/Documents/Git Projects/Bume-Mobile-Application/Bume-mobile-application/navigation/index.tsx"],"names":["NavigationContainer","DefaultTheme","DarkTheme","createStackNavigator","React","HomeScreen","DetailsScreen","ProfileScreen","LinkingConfiguration","createDrawerNavigator","Icon","Navigation","colorScheme","HomeStack","DetailsStack","ProfileStack","Drawer","HomeStackScreen","navigation","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","title","headerLeft","openDrawer","ProfileStackScreen","DetailsStackScreen","RootNavigator"],"mappings":"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","sourcesContent":["import { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport * as React from 'react';\r\nimport { ColorSchemeName } from 'react-native';\r\n\r\nimport NotFoundScreen from '../screens/NotFoundScreen';\r\nimport { RootStackParamList } from '../types';\r\nimport BottomTabNavigator from './BottomTabNavigator';\r\nimport HomeScreen from '../screens/HomeScreen';\r\nimport DetailsScreen from '../screens/DetailsScreen';\r\nimport ProfileScreen from '../screens/ProfileScreen';\r\nimport LinkingConfiguration from './LinkingConfiguration';\r\nimport { Button, View } from 'react-native';\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport TabOneScreen from '../screens/TabOneScreen';\r\n\r\n\r\nimport Icon from 'react-native-vector-icons/Ionicons';\r\n\r\n// If you are not familiar with React Navigation, we recommend going through the\r\n// \"Fundamentals\" guide: https://reactnavigation.org/docs/getting-started\r\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\r\n  return (\r\n    <NavigationContainer\r\n      linking={LinkingConfiguration}\r\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\r\n      <RootNavigator />\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\n// A root stack navigator is often used for displaying modals on top of all other content\r\n// Read more here: https://reactnavigation.org/docs/modal\r\nconst HomeStack = createStackNavigator<RootStackParamList>();\r\nconst DetailsStack = createStackNavigator<RootStackParamList>();\r\nconst ProfileStack = createStackNavigator<RootStackParamList>();\r\nconst Drawer = createDrawerNavigator();\r\n\r\n\r\n\r\n\r\nfunction HomeStackScreen({ navigation }: any) {\r\n  return (\r\n    <HomeStack.Navigator screenOptions={{ headerStyle: {\r\n      backgroundColor: '#009387'\r\n    },\r\n    headerTintColor: '#fff',\r\n    headerTitleStyle:\r\n    {\r\n      fontWeight: 'bold'\r\n    }\r\n    }}>\r\n      <HomeStack.Screen name=\"Root\" component={HomeScreen} options ={{\r\n        title: 'Overview',\r\n        headerLeft: () => (\r\n          <Icon.Button name ='ios-menu' size={25}\r\n          backgroundColor ='#009387' onPress={() => {navigation.openDrawer()}}></Icon.Button>\r\n        )\r\n      }} />\r\n      \r\n    </HomeStack.Navigator>\r\n  );\r\n}\r\n\r\n\r\nfunction ProfileStackScreen({ navigation }: any) {\r\n  return (\r\n    <ProfileStack.Navigator screenOptions={{ headerStyle: {\r\n      backgroundColor: '#009387'\r\n    },\r\n    headerTintColor: '#fff',\r\n    headerTitleStyle:\r\n    {\r\n      fontWeight: 'bold'\r\n    }\r\n    }}>\r\n      \r\n      <ProfileStack.Screen name=\"NotFound\" component={ProfileScreen} options={{\r\n        title: 'Profile',\r\n         headerLeft: () => (\r\n          <Icon.Button name ='ios-menu' size={25}\r\n          backgroundColor ='#009387' onPress={() => {navigation.openDrawer()}}></Icon.Button>\r\n        )\r\n        }} />\r\n    </ProfileStack.Navigator>\r\n  );\r\n}\r\n\r\n\r\nfunction DetailsStackScreen({ navigation }: any) {\r\n  return (\r\n    <DetailsStack.Navigator screenOptions={{ headerStyle: {\r\n      backgroundColor: '#009387'\r\n    },\r\n    headerTintColor: '#fff',\r\n    headerTitleStyle:\r\n    {\r\n      fontWeight: 'bold'\r\n    }\r\n    }}>\r\n      \r\n      <DetailsStack.Screen name=\"Root\" component={DetailsScreen} options={{\r\n        title: 'Details',\r\n         headerLeft: () => (\r\n          <Icon.Button name ='ios-menu' size={25}\r\n          backgroundColor ='#009387' onPress={() => {navigation.openDrawer()}}></Icon.Button>\r\n        )\r\n        }} />\r\n    </DetailsStack.Navigator>\r\n  );\r\n}\r\n\r\nfunction RootNavigator() {\r\n  return (\r\n\r\n    <Drawer.Navigator initialRouteName=\"Home\">\r\n        <Drawer.Screen name=\"Home\" component={HomeStackScreen} />\r\n        <Drawer.Screen name=\"Details\" component={DetailsStackScreen} />\r\n        <Drawer.Screen name=\"Profile\" component={ProfileStackScreen} />\r\n      </Drawer.Navigator>\r\n\r\n   /* <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n      <Stack.Screen name=\"Root\" component={BottomTabNavigator} />\r\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\r\n    </Stack.Navigator>*/\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}